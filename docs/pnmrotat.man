

pnmrotate(1)               Unix Programmer's Manual               pnmrotate(1)


NNNAAAMMMEEE
     pnmrotate - rotate a portable anymap by some angle

SSSYYYNNNOOOPPPSSSIIISSS
     pppnnnmmmrrroootttaaattteee [-nnnoooaaannntttiiiaaallliiiaaasss] _a_n_g_l_e [_p_n_m_f_i_l_e]

DDDEEESSSCCCRRRIIIPPPTTTIIIOOONNN
     Reads a portable anymap as input.  Rotates it by the specified angle  and
     produces a portable anymap as output.  If the input file is in color, the
     output will be too, otherwise it will be  grayscale.   The  angle  is  in
     degrees   (floating   point),  measured  counter-clockwise.   It  can  be
     negative, but it should be between  -90  and  90.   Also,  for  rotations
     greater  than  45  degrees  you  may  get better results if you first use
     _p_n_m_f_l_i_p to do a 90 degree  rotation  and  then  _p_n_m_r_o_t_a_t_e  less  than  45
     degrees back the other direction

     The rotation algorithm is Alan Paeth's three-shear method.  Each shear is
     implemented  by looping over the source pixels and distributing fractions
     to each of the destination pixels.  This has an "anti-aliasing" effect  -
     it  avoids  jagged  edges  and similar artifacts.  However, it also means
     that the original colors or gray levels in the image  are  modified.   If
     you  need  to  keep  precisely  the  same  set of colors, you can use the
     ---nnnoooaaannntttiiiaaallliiiaaasss flag.  This does  the  shearing  by  moving  pixels  without
     changing  their  values.   If you want anti-aliasing and don't care about
     the precise colors, but still need a limited *number* of colors, you  can
     run the result through _p_p_m_q_u_a_n_t.

     All flags can be abbreviated to their shortest unique prefix.

RRREEEFFFEEERRREEENNNCCCEEESSS
     "A Fast Algorithm for General Raster Rotation" by  Alan  Paeth,  Graphics
     Interface '86, pp. 77-81.

SSSEEEEEE AAALLLSSSOOO
     pnmshear(1), pnmflip(1), pnm(5), ppmquant(1)

AAAUUUTTTHHHOOORRR
     Copyright (C) 1989, 1991 by Jef Poskanzer.




















                               12 January 1991                               1


